import{inject as e,ref as t,computed as n}from"vue";function a(e={},t="-"){return Object.keys(e).reduce(((n,s)=>{const r=e[s],u=`${t}-${s}`;if("string"==typeof r)return n[u]=r,n;{const e=a(r,u);return Object.assign(Object.assign({},n),e)}}),{})}const s=Symbol("theme");class r{constructor(e){this.name=t("default"),this.map=new Map,this.map=new Map(Object.entries(e))}install(e,t){e.provide(t||s,this)}changeTheme(e){this.map.has(e)?this.name.value=e:console.warn(`theme ${e} not found`)}setTheme(e,t){this.map.set(e,t)}deleteTheme(e){"default"!==e?this.map.delete(e):console.warn("can not delete default theme, try change it by `setTheme('default', newTheme)`")}get data(){return n((()=>this.map.get(this.name.value)))}get styles(){return n((()=>a(this.data.value)))}get currentTheme(){return n((()=>this.name.value))}get themeList(){return n((()=>[...this.map.keys()]))}}function u(t=null){return e(null!==t?t:s)}function i(t=null){var n;return null===(n=e(null!==t?t:s))||void 0===n?void 0:n.data}function l(e){return new r(e)}export{l as createTheme,i as useTheme,u as useThemeController};
